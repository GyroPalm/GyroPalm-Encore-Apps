enum ScreenApp { SCR_WEATHER };	//Screen indexes
lv_obj_t *screenApp[1];    //screen pointers
GyroPalmLVGL formApp[1];   //screen helper methods
ScreenApp curScreenApp = SCR_WEATHER;    //default screen

lv_task_t* tmr_weather;

void lv_weather_task(struct _lv_task_t *data) {
    loop_weather();
}

static void btn_event(lv_obj_t * obj, lv_event_t event)
{
    if (event == LV_EVENT_CLICKED) {
        String btnName = lv_list_get_btn_text(obj);
		Serial.printf("Clicked: %s\n", btnName);

        switch (curScreenApp)
        {
            case SCR_WEATHER:
				showApp(SCR_HOME);
            break;

            default: break;
		}
	}
}


// Begin AutoGenerated Screens - DO NOT EDIT BELOW
void showApp_weather(int page) {
    if ((ScreenApp) page != curScreenApp) {
        formApp[curScreenApp].removeBar();    //remove old StatusBar before proceeding
    }

    switch (page)
    {
		case SCR_WEATHER:
        {
            //Draw screen UI
            curScreenApp = (ScreenApp) page;
            formApp[curScreenApp].init(screenApp[curScreenApp]);  //now defining screen items
            formApp[curScreenApp].createBar(barTask, lv_update_task);
            formApp[curScreenApp].setTime(gplm.getTime());
			formApp[curScreenApp].createLabel(-58, -37, "Hello World");    //show element
			formApp[curScreenApp].createLED(58, -37, true);    //show element
			formApp[curScreenApp].createButton(0, 67, "Button", btn_event, true, 214);    //show element

            formApp[curScreenApp].showScreen(ANIM_NONE);   //show the screen w/ no animation
        }
        break;


        default: break;
    }
	formApp[curScreenApp].setBarCallback(hide_weather);
}
// End AutoGenerated Screens - DO NOT EDIT ABOVE

void show_weather()
{
    showApp_weather(curScreenApp);
	
	tmr_weather = lv_task_create(lv_weather_task, 1000, LV_TASK_PRIO_LOWEST, NULL);
}

void loop_weather()
{
	Serial.println("Fetching weather");
}

void hide_weather(int barIntent)
{
	if (barIntent == BAR_SWIPE_LEFT) {
		lv_task_del(tmr_weather); //removes the task
		showApp(SCR_HOME);
	}
}
